apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'jacoco'

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.pd.shaadi.OpenForTesting'
}


android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.pd.shaadi"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding.enabled = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'


    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    kaptTest "com.google.dagger:dagger-compiler:$dagger2Version"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    testImplementation "androidx.room:room-testing:2.2.0-rc01"
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'org.mockito:mockito-android:2.25.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.1'
    testImplementation 'org.mockito:mockito-core:2.25.0'


    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.1.0'

    implementation "androidx.room:room-ktx:2.2.0-rc01"
    kapt 'androidx.room:room-compiler:2.1.0'

    //Retrofit and Moshi
    implementation "com.squareup.retrofit2:retrofit: $version_retrofit"
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$version_retrofit"

    //RxJava RxAndroid
    implementation "io.reactivex.rxjava2:rxjava:$rxJava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    //dagger2
    implementation "com.google.dagger:dagger:$dagger2Version"
    implementation "com.google.dagger:dagger-android:$dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$dagger2Version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2Version"

    //glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'androidx.cardview:cardview:1.0.0'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'org.jetbrains.kotlin' && requested.name == 'kotlin-reflect') {
            details.useVersion kotlin_version
        }
    }
}
